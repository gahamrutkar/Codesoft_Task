# -*- coding: utf-8 -*-
"""Titanic Survival Prediction_Codesoft_Task 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ka4cnj1DipcLF_SNPupR0V66v-sncash
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load the dataset into a pandas DataFrame
data = pd.read_csv('/content/train.csv')  # Replace 'titanic.csv' with the actual file path
# Explore the dataset
print(data.head())
print(data.info())

# Drop irrelevant features or features with too many missing values
data.drop(['PassengerId', 'Name', 'Cabin', 'Ticket'], axis=1, inplace=True)
# Fill missing values for the 'Age' column with the median age
data['Age'].fillna(data['Age'].median(), inplace=True)
# Fill missing values for the 'Embarked' column with the most frequent value
data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)
# Convert categorical features to numerical using label encoding
label_encoder = LabelEncoder()
data['Sex'] = label_encoder.fit_transform(data['Sex'])
data['Embarked'] = label_encoder.fit_transform(data['Embarked'])

X = data.drop('Survived', axis=1)
y = data['Survived']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a Random Forest Classifier
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)
# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
# Print classification report and confusion matrix
print("Classification Report:")
print(classification_report(y_test, y_pred))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))